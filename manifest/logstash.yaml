---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/scheme: 'http'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '8088'
    spec:
      containers:
      - name: logstash
        image: registry.cn-shenzhen.aliyuncs.com/xiaoxitou/logstash@sha256:fe3b397d8381199021633c87cbb28465ccbbfe0b7bd6533f646cfdb35c737f0a
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: 1Gi
            cpu: 100m
          limits:
            memory: 1Gi
        ports:
        - name: http
          containerPort: 8080
        - name: jmx-metrics
          containerPort: 8088
        env:
        - name: LS_JAVA_OPTS
          value: "-Xms512m -Xmx512m -javaagent:/jmx_prometheus_javaagent-0.20.0.jar=8088:/prometheus-jmx-config.yaml"
        volumeMounts:
        - name: pipelines
          mountPath: /usr/share/logstash/config/pipelines.yml
          subPath: pipelines.yml
      volumes:
      - name: pipelines
        configMap:
          name: pipelines
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pipelines
data:
  pipelines.yml: |
    - pipeline.id: main
      config.string: |
        input {
          http {
            port => 8080
          }
        }
        output {
          kafka {
            bootstrap_servers => "my-cluster-kafka-brokers:9092"
            topic_id => "test"
          }
        }
---
apiVersion: v1
kind: Service
metadata:
  name: logstash
  labels:
    app: logstash
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    protocol: TCP
    name: http
  selector:
    app: logstash